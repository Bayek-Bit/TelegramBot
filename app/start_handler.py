from aiogram import Router, F 
from aiogram.filters import CommandStart
from aiogram.types import Message, InputMediaPhoto, FSInputFile, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.database import ClientDatabaseHandler
from app.keyboards import show_products_kb

# Constants for file paths
ICONS_PATH = "app/icons/"
MAIN_ICON = f"{ICONS_PATH}main_icon.jfif"
NEW_CLIENT_ICON = f"{ICONS_PATH}new_client.jfif"
SHOW_CATEGORIES_ICON = f"{ICONS_PATH}main_icon1.jfif"
ERROR_ICON = f"{ICONS_PATH}something_went_wrong.jfif"
PRODUCT_ICON = f"{ICONS_PATH}bonny.jfif"
PAYMENT_ICON = f"{ICONS_PATH}payment.jfif"
SUCCESS_ICON = f"{ICONS_PATH}success.jfif"

start_router = Router()
ClientHandler = ClientDatabaseHandler()

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class RegistrationStates(StatesGroup):
    waiting_for_agreement = State()

@start_router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start. –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã/–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    await state.clear()
    await state.set_data({})
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    client_info = await ClientHandler.get_client_info(telegram_id=message.from_user.id)

    if client_info:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await message.answer_photo(FSInputFile(MAIN_ICON), caption="–ü—Ä–∏–≤–µ—Ç ü§ç\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ –∑–∞–∫–∏–Ω—É—Ç—å –≥–µ–º—á–∏–∫–æ–≤(–∏ –Ω–µ —Ç–æ–ª—å–∫–æ) –Ω–∞ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç.", reply_markup=show_products_kb)
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        inline_kb_builder = InlineKeyboardBuilder()
        inline_kb_builder.button(text="–•–æ—Ä–æ—à–æ", callback_data="agree")

        await message.answer_photo(photo=FSInputFile(NEW_CLIENT_ICON), caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–ë–æ—Ç –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ(–ø–æ—á—Ç—É –∏ –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞) –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –∏ —Ç–æ–ª—å–∫–æ –µ–º—É.\n–¢–∞–∫ –∂–µ –∏ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è/–ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞.\n\n–û—Ç–≤–µ—Ç—ã –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ FAQ(/faq).\n\n–î–æ–±—Ä–æ–≥–æ –∑–¥—Ä–∞–≤–∏—è –æ—Ç —Å–ª–∞–≤—è–Ω–∫–∏ ü§ç", reply_markup=inline_kb_builder.as_markup())
        await state.set_state(RegistrationStates.waiting_for_agreement)


@start_router.callback_query(RegistrationStates.waiting_for_agreement, F.data == "agree")
async def agree_to_terms(callback_query: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é."""

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await ClientHandler.add_new_client(telegram_id=callback_query.from_user.id)
    
    keyboard_builder = InlineKeyboardBuilder()
    keyboard_builder.button(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã", callback_data="show_products")

    await callback_query.message.edit_media(InputMediaPhoto(media=FSInputFile(MAIN_ICON), caption="–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –∫–∞–∫ –∫–ª–∏–µ–Ω—Ç.\n\n–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–∫–∞–∑–æ–º, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É(/help)"), reply_markup=keyboard_builder.as_markup())

    await state.clear()
